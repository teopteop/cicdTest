name: CD actions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      # 코드 다운로드
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17' # 버전
          distribution: 'temurin' #Eclipse Temurin 에서 제공하는 안정적인 JDK 배포판

      # 그래들 권한 설정 : 이게 없으면 테스트 권한이 없음
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 프로젝트 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # 도커 빌드 환경 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 도커 허브 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{serets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERTHUB_TOKEN}}

      # 도커 이미지 빌드 및 푸시
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/my-app:latest

      # EC2 서버에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_SSH_KEY}}
          script: |
            docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUN_TOKEN}}
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/my-app:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 8080:8080 --name my-app ${{secrets.DOCKERHUB_USERNAME}}/my-app:latest